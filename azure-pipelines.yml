trigger:
- develop

variables:
- group: OBS Pipeline
- name: vmUsername1
  value: $[variables.vmUsername]
- name: vmIp1
  value: $[variables.vmIp]
- name: gitlabRegistryUsername1
  value: $[variables.gitlabRegistryUsername]
- name: gitlabRegistryPassword1
  value: $[variables.gitlabRegistryPassword]

pool:
    vmImage: 'ubuntu-latest'

jobs:
- job: BuildAndPush
  displayName: 'Build and Push Docker Images'
  steps:
  - checkout: self
  - script: |
      echo "Logging in to GitLab Container Registry"
      echo "$(gitlabRegistryPassword1)" | docker login --username "$(gitlabRegistryUsername1)" --password-stdin  registry.gitlab.com

      echo "Building and pushing Docker images"
      docker build -t registry.gitlab.com/nguyenlghe176558/cicd-be ./Backend/
      docker push registry.gitlab.com/nguyenlghe176558/cicd-be

      docker build -t registry.gitlab.com/nguyenlghe176558/cicd-fe ./Frontend/website
      docker push registry.gitlab.com/nguyenlghe176558/cicd-fe

      docker build -t registry.gitlab.com/nguyenlghe176558/cicd-admin ./Frontend/admin
      docker push registry.gitlab.com/nguyenlghe176558/cicd-admin

- job: Deploy
  displayName: 'Deploy Application'
  dependsOn: BuildAndPush  
  steps:
  - task: DownloadSecureFile@1
    name: sshKey
    displayName: 'Get private key'
    inputs:
      secureFile: 'azk4y.pem'
  - script: |
      sudo chmod 400 $(sshKey.secureFilePath)
      ssh -o StrictHostKeyChecking=no -i $(sshKey.secureFilePath) $(vmUsername1)@$(vmIp1) "
      sudo docker compose -f online-book-shop-aws/docker-compose.yml down &&
      cd online-book-shop-aws && 
      git pull origin develop && 
      cd .. &&
      sudo docker compose -f online-book-shop-aws/docker-compose.yml up -d
      "
